#===============================================================================
# 제 6 장 튜플
#===============================================================================

#===============================================================================
# 6.1 튜플의 연산
#===============================================================================

#===============================================================================
# 6.2 패킹과 언패킹
#===============================================================================

# 패킹
t = 1, 2, 'hello'

# 언패킹
x, y, z = t

# 확장된 언패킹
T = (1,2,3,4,5)
a, *b = T
print(a, b)
#1 [2, 3, 4, 5]
*a, b = T
print(a, b)
#[1, 2, 3, 4] 5
a, b, *c = T
print(a, b, c)
#1 2 [3, 4, 5]

#===============================================================================
# 6.3 리스트와의 차이점
#===============================================================================

# 튜플에 있는 값들을 함수의 인수로 사용
def func(a, b):
	return a + b
args = (4, 5)
print(func(*args))

#===============================================================================
# 6.4 이름 있는 튜플
# collections.namedtuple(typename, field_names, verbose=False, rename=False)
#===============================================================================

from collections import namedtuple
Point = namedtuple('Point', 'x y')
print(Point)
#<class '__main__.Point'>
print(Point.__name__)
#Point

pt1 = Point(1.0, 5.0)
pt2 = Point(2.5, 1.5)
print(pt1)
#Point(x=1.0, y=5.0)
print(pt1.x, pt1.y)
#1.0 5.0
print(pt1[0], pt1[1])
#1.0 5.0

#===============================================================================
# 6.5 경로명 다루기 229p
#===============================================================================

#===============================================================================
# 6.6 URL 다루기 230p
#===============================================================================